// automatically generated by the FlatBuffers compiler, do not modify

package edu.vanderbilt.edgent.types;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class WorkerCommand extends Table {
  public static WorkerCommand getRootAsWorkerCommand(ByteBuffer _bb) { return getRootAsWorkerCommand(_bb, new WorkerCommand()); }
  public static WorkerCommand getRootAsWorkerCommand(ByteBuffer _bb, WorkerCommand obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public WorkerCommand __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int type() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String ebId() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ebIdAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }

  public static int createWorkerCommand(FlatBufferBuilder builder,
      int type,
      int ebIdOffset) {
    builder.startObject(2);
    WorkerCommand.addEbId(builder, ebIdOffset);
    WorkerCommand.addType(builder, type);
    return WorkerCommand.endWorkerCommand(builder);
  }

  public static void startWorkerCommand(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addType(FlatBufferBuilder builder, int type) { builder.addInt(0, type, 0); }
  public static void addEbId(FlatBufferBuilder builder, int ebIdOffset) { builder.addOffset(1, ebIdOffset, 0); }
  public static int endWorkerCommand(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishWorkerCommandBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
}

